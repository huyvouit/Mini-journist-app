{"ast":null,"code":"import _objectSpread from \"C:/Users/Administrator/huyvo/DemoTest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/Administrator/huyvo/DemoTest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useState } from 'react';\nexport default _s(initialValue => {\n  _s();\n\n  const _useState = useState(initialValue),\n        _useState2 = _slicedToArray(_useState, 2),\n        todos = _useState2[0],\n        setTodos = _useState2[1];\n\n  return {\n    todos,\n    addTodo: todoText => {\n      todoText = _objectSpread(_objectSpread({}, todoText), {}, {\n        id: todos.length + 1\n      });\n      setTodos([...todos, todoText]);\n    },\n    deleteTodo: todoIndex => {\n      const newTodos = todos.filter(abc => abc.id !== Number(todoIndex));\n      setTodos(newTodos);\n    }\n  };\n}, \"I1yqtYHeMA2BYI7Mx3LRkKrSqVA=\");","map":{"version":3,"sources":["C:/Users/Administrator/huyvo/DemoTest/src/Features/JournalManagement/useTodoState.js"],"names":["useState","initialValue","todos","setTodos","addTodo","todoText","id","length","deleteTodo","todoIndex","newTodos","filter","abc","Number"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,kBAAeC,YAAY,IAAI;AAAA;;AAAA,oBACHD,QAAQ,CAACC,YAAD,CADL;AAAA;AAAA,QACtBC,KADsB;AAAA,QACfC,QADe;;AAG7B,SAAO;AACLD,IAAAA,KADK;AAELE,IAAAA,OAAO,EAAEC,QAAQ,IAAI;AACnBA,MAAAA,QAAQ,mCAAOA,QAAP;AAAgBC,QAAAA,EAAE,EAACJ,KAAK,CAACK,MAAN,GAAa;AAAhC,QAAR;AAEAJ,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWG,QAAX,CAAD,CAAR;AACD,KANI;AAOLG,IAAAA,UAAU,EAAEC,SAAS,IAAI;AACvB,YAAMC,QAAQ,GAAGR,KAAK,CAACS,MAAN,CAAcC,GAAD,IAASA,GAAG,CAACN,EAAJ,KAAWO,MAAM,CAACJ,SAAD,CAAvC,CAAjB;AAEAN,MAAAA,QAAQ,CAACO,QAAD,CAAR;AACD;AAXI,GAAP;AAaD,CAhBD","sourcesContent":["import { useState } from 'react';\r\n\r\nexport default initialValue => {\r\n  const [todos, setTodos] = useState(initialValue);\r\n\r\n  return {\r\n    todos,\r\n    addTodo: todoText => {\r\n      todoText = {...todoText,id:todos.length+1}\r\n      \r\n      setTodos([...todos, todoText]);\r\n    },\r\n    deleteTodo: todoIndex => {\r\n      const newTodos = todos.filter((abc) => abc.id !== Number(todoIndex));\r\n      \r\n      setTodos(newTodos);\r\n    }\r\n  };\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}