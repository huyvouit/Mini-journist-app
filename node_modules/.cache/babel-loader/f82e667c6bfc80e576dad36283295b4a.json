{"ast":null,"code":"import _slicedToArray from \"C:/Users/Administrator/huyvo/DemoTest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useState } from 'react';\nexport default _s(() => {\n  _s();\n\n  const _useState = useState({\n    name: \"\",\n    content: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1]; //  const [value1,setValue1] = useState('');\n\n\n  return {\n    value,\n    onChange: event => {\n      setValue(event.target.value.name);\n    },\n    onChange: event => {\n      setValue(event.target.value.content);\n    },\n    // onChange1: event => {\n    //     setValue1(event.target.value);\n    // },\n    // reset1: () => setValue1(''),\n    reset: () => setValue('')\n  };\n}, \"uTHEhOrSOZ1aoqsbiQIuyZfo6gM=\");","map":{"version":3,"sources":["C:/Users/Administrator/huyvo/DemoTest/src/Features/JournalManagement/UpdateInput.js"],"names":["useState","name","content","value","setValue","onChange","event","target","reset"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,kBAAe,MAAM;AAAA;;AAAA,oBACOA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAC,EAAN;AAAUC,IAAAA,OAAO,EAAC;AAAlB,GAAD,CADf;AAAA;AAAA,QACZC,KADY;AAAA,QACLC,QADK,kBAErB;;;AACE,SAAO;AACLD,IAAAA,KADK;AAELE,IAAAA,QAAQ,EAAEC,KAAK,IAAI;AACjBF,MAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAb,CAAmBF,IAApB,CAAR;AACD,KAJI;AAKLI,IAAAA,QAAQ,EAAEC,KAAK,IAAI;AACfF,MAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAb,CAAmBD,OAApB,CAAR;AACH,KAPI;AAQL;AACA;AACA;AACA;AACAM,IAAAA,KAAK,EAAE,MAAMJ,QAAQ,CAAC,EAAD;AAZhB,GAAP;AAcD,CAjBD","sourcesContent":["import { useState } from 'react';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState({name:\"\", content:\"\"});\r\n//  const [value1,setValue1] = useState('');\r\n  return {\r\n    value,\r\n    onChange: event => {\r\n      setValue(event.target.value.name);\r\n    },\r\n    onChange: event => {\r\n        setValue(event.target.value.content);\r\n    },\r\n    // onChange1: event => {\r\n    //     setValue1(event.target.value);\r\n    // },\r\n    // reset1: () => setValue1(''),\r\n    reset: () => setValue('')\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}