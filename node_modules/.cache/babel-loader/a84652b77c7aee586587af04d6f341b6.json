{"ast":null,"code":"import _objectSpread from \"C:/Users/Administrator/huyvo/DemoTest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/Administrator/huyvo/DemoTest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useState } from 'react';\nexport default _s(() => {\n  _s();\n\n  const _useState = useState({\n    name: \"\",\n    description: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  return {\n    value,\n    onChangeOne: event => {\n      setValue(_objectSpread(_objectSpread({}, value), {}, {\n        name: event.target.value\n      }));\n    },\n    onChangeTwo: event => {\n      setValue(_objectSpread(_objectSpread({}, value), {}, {\n        description: event.target.value\n      }));\n    },\n    reset: () => setValue({\n      name: \"\",\n      description: \"\"\n    })\n  };\n}, \"6h7Z9xx73hcj7FgZM2s20OpnIr8=\");","map":{"version":3,"sources":["C:/Users/Administrator/huyvo/DemoTest/src/Features/JournalManagement/UpdateInput.js"],"names":["useState","name","description","value","setValue","onChangeOne","event","target","onChangeTwo","reset"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,kBAAe,MAAM;AAAA;;AAAA,oBACOA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAC,EAAN;AAASC,IAAAA,WAAW,EAAC;AAArB,GAAD,CADf;AAAA;AAAA,QACZC,KADY;AAAA,QACLC,QADK;;AAGnB,SAAO;AACLD,IAAAA,KADK;AAELE,IAAAA,WAAW,EAAEC,KAAK,IAAI;AACpBF,MAAAA,QAAQ,iCAAKD,KAAL;AAAWF,QAAAA,IAAI,EAAEK,KAAK,CAACC,MAAN,CAAaJ;AAA9B,SAAR;AACD,KAJI;AAKLK,IAAAA,WAAW,EAAEF,KAAK,IAAI;AAClBF,MAAAA,QAAQ,iCAAKD,KAAL;AAAWD,QAAAA,WAAW,EAAEI,KAAK,CAACC,MAAN,CAAaJ;AAArC,SAAR;AACH,KAPI;AAQLM,IAAAA,KAAK,EAAE,MAAML,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAC,EAAN;AAASC,MAAAA,WAAW,EAAC;AAArB,KAAD;AARhB,GAAP;AAUD,CAbD","sourcesContent":["import { useState } from 'react';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState({name:\"\",description:\"\"});\r\n\r\n  return {\r\n    value,\r\n    onChangeOne: event => {\r\n      setValue({...value,name: event.target.value});\r\n    },\r\n    onChangeTwo: event => {\r\n        setValue({...value,description: event.target.value});\r\n    },\r\n    reset: () => setValue({name:\"\",description:\"\"})\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}